name: CI

on: [push]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-west-1'

jobs:

  ci:
    runs-on: ubuntu-latest

    steps:

      - name: debug
        run: |
          echo "${{ toJson(github) }}"

      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set release version info
        if: github.event_name == 'release'
        run: |
          echo "::set-env name=VERSION::${{ github.event.release.tag_name }}"
      
      - name: Set commit version info
        if: github.event_name == 'push'
        run: |
          echo "::set-env name=VERSION::$(echo "$GITHUB_SHA" | cut -c1-7)"

      - name: Set PR version info
        if: github.event_name == 'pull_request'
        run: |
          echo "::set-env name=VERSION::pr-${{ github.event.pull_request.number }}"
      
      - name: Set build info
        run: |
          echo "::set-env name=IMAGE::${IMAGE_REPOSITORY}:${VERSION}"

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: micahlmartin/github-deployment-test
          tag_with_ref: true
          tag_with_sha: true

      - name: Fetch assets
        run: |
          CONTAINER=$(docker create micahlmartin/github-deployment-test:sha-${VERSION})
          docker cp $CONTAINER:/srv/build ./assets
          ls -la ./assets

      - name: Upload to S3
        if: github.ref == 'refs/heads/master'
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_STAGING }}
          SOURCE_DIR: ./assets

      # - name: Deploy to QA
      #   if: github.ref == 'refs/heads/master'
      #   run: |
      #     curl -X POST \
      #       --url https://api.github.com/repos/micahlmartin/github-deployment-test/deployments \
      #       -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
      #       -H 'content-type: application/json' \
      #       -d "{ \
      #             \"ref\": \"master\", \
      #             \"environment\": \"qa\" \
      #           }"
